#ifndef GUI_COLOR_PROVIDER_H
#define GUI_COLOR_PROVIDER_H

////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#include "gui_common.h"
// Qt
#include <QColor>
#include <QBrush>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
namespace gui { // SMS Engin 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//	class CColorProvider
//
class CColorProvider
{
public:
	CColorProvider() = default;
	//CConversationItem( CBasicBubble* pBubble );
	virtual ~CColorProvider() = default;

public:
	//
	//	Main Interface
	//
	static QBrush GetBubbleBrush( EBubbleOrientation eOrientation )
	{
		QBrush oBrush;
		oBrush.setStyle( Qt::SolidPattern );
		if (eOrientation == EBubbleOrientation::Right)
			oBrush.setColor( QColor( 220, 220, 220 ) );
		else // Left
			oBrush.setColor( QColor( 13, 125, 185 ) );
		return oBrush;
	}

	static QColor GetBubbleTextColor( EBubbleOrientation eOrientation )
	{
		if (eOrientation == EBubbleOrientation::Right)
			return Qt::black;
		else // Left
			return Qt::white;

	}

private:
	//
	//	Content
	//
};
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//	Inline Implementations
//
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
} // namespace gui
////////////////////////////////////////////////////////////////////////////////

#endif // GUI_COLOR_PROVIDER_H
