#ifndef SE_SMS_GATEWAY_H
#define SE_SMS_GATEWAY_H

////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#include "se_atcommands.h"
#include "se_error.h"
#include "se_at_iparser.h"
//
//	Qt Includes
//
#include <QObject>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
namespace se { // SMS Engin 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//	Interface ISmsGetway
//
class SMSENGINE_EXPORT ISmsGetway : public QObject
{
	Q_OBJECT

	enum EType
	{
		eUndefined = 0,
		eATDevice,
		eTcpDevice
	};

public:
	inline ISmsGetway( QObject* pParent = nullptr );
	virtual ~ISmsGetway() = default;

public:
	//
	//	Main Interface
	//
signals:
	//
	//	Signals
	//
	void sigError( se::CError const& oError );
};
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
//	Interface IATDevice
//
class SMSENGINE_EXPORT IATDevice : public ISmsGetway
{
	Q_OBJECT

public:
	inline IATDevice( QObject* pParent = nullptr );
	virtual ~IATDevice() = default;

public:
	//
	//	Main Interface
	//
	virtual bool ExecuteCommand( t_ATCommandPtr pATCommand ) = 0;
	virtual bool IsReady() const = 0;

signals:
	//
	//	Signals
	//
	void sigResponseReady( se::t_ATCommandPtr pATCommand );
	void sigATEvent( se::t_ATResponceSharedPtr pEvent );
	
	// Unused
	void sigATEvent( QByteArray const& aData );
};
////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////
//
//	Inline Implementations
//
////////////////////////////////////////////////////////////////////////////////
// [ISmsGetway] Default Constructor
inline ISmsGetway::ISmsGetway( QObject* pParent )
	: QObject( pParent )
{}
// [IATDevice] Default Constructor
inline IATDevice::IATDevice( QObject* pParent )
	: ISmsGetway( pParent )
{}
////////////////////////////////////////////////////////////////////////////////
} // namespace se
////////////////////////////////////////////////////////////////////////////////

#endif // SE_SMS_GATEWAY_H
