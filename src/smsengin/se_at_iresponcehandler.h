#ifndef SE_AT_I_RESPONCE_HANDLER_H
#define SE_AT_I_RESPONCE_HANDLER_H

////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#include "se_at_responce.h"
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
namespace se { // SMS Engin 
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
//	Interface IATResponceHandler
//
class SMSENGINE_EXPORT IATResponceHandler
{
public:
	// Constructor & Destructor
	IATResponceHandler() = default;
	virtual ~IATResponceHandler() = default;

public:
	//
	//	Main Interface
	//
	virtual QString               GetKey() const = 0;
	virtual t_ATResponceSharedPtr Handle( QString sData, EParsingStatus& eStatus ) = 0;
	//virtual int					  GetRequiredATPointCount() const;
};

typedef std::unique_ptr<IATResponceHandler> t_ATResponceHandlerUniquePtr;
typedef std::shared_ptr<IATResponceHandler> t_ATResponceHandlerSPtr;
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
} // namespace se
////////////////////////////////////////////////////////////////////////////////

#endif // SE_AT_I_RESPONCE_HANDLER_H
