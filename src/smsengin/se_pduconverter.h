#ifndef SE_PDU_CONVERTER_H
#define SE_PDU_CONVERTER_H

////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#include "se_smsmessage.h"
// STD
#include <sstream>
////////////////////////////////////////////////////////////////////////////////

// Forward Declarations
namespace PduLib { class TimeStamp; }

////////////////////////////////////////////////////////////////////////////////
namespace se { // SMS Engin 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//	class CPDUConverter
//
class CPDUConverter
{
public:
	//
	//	Static Tool Methods
	//
	static QStringList           Encode( CSmsMessage const& sMsg, 
										 QString const& sSMSCNumber,
										 bool bStatusReportRequest = false );
	static t_SmsMessageSharedPtr Decode( QString const& sDeliveredPDU, QString* psReportAckPDU = nullptr );

	static QDateTime GetNormalizedTimeStamp( PduLib::TimeStamp const& );
	static QDateTime GetNormalizedTimeStamp( QString const& sDT, int nTimeZone );

	static int CalculatePduLengthToSubmit( QString const& sPDU );

private:
	//
	//	Helper Methods
	//
	static std::stringstream MakeHexStream( QString const& sInput );
	static QString MakeSubmitPDUFromStream( std::stringstream& ss );
public:
	static QString MakeReportActPDUFromStream( std::stringstream& ss );
	
};
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
//	Inline Implementations
//

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//	class CATCommand
//
// GetCommandName

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
} // namespace se
////////////////////////////////////////////////////////////////////////////////

#endif // SE_PDU_CONVERTER_H
